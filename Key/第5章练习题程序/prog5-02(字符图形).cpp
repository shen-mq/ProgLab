/*********************************************************************
程序名：使用字符打印图形
版权：遵从GPL版权协议，可自由使用和传播（请勿上传到收费性网络文库）
作者：anbangli@foxmail.com
日期：2019-07-21
说明：

5-2.在文本模式下，可以用一些字符在屏幕上模拟打印输出图形，例如下面是一个
使用 '*' 字符打印出的 4 行 20 列的空心矩形：
********************
*                  *
*                  *
********************
请定义一个函数 void prtRect(char ch, int m, int n)，用于使用指定的字符
ch 打印输出 m 行 n 列的空心矩形。然后编写主函数测试此函数。

解析：本题让读者练习编写函数的格式，同时还练习使用循环进行输出。
*********************************************************************/
#include <iostream>
using namespace std;

void prtRect(char ch, int m, int n) {	//版本1：在行循环内考虑首行、尾行和中间行
    int i, j;
    for (i = 1; i <= m; i++)	//行循环
        if (i == 1 || i == m) { //首行和尾行：打印一行字符 ch
            for (j = 1; j <= n; j++)	//连续打印
                putchar(ch);
            putchar('\n');	//行尾换行
        } else {	//中间行：在首列和尾列打印字符 ch，其余位置打印空格
            for (j = 1; j <= n; j++)
                putchar((j == 1 || j == n) ? ch : ' ');
            //此处用条件表达式写得比较简洁。也可以用 if... else 结构。
            putchar('\n');	//行尾换行
        }
}

//void prtRect(char ch, int m, int n) {		//版本2：更简洁地直接写一个二重循环
//    int i, j;
//    //写一个二重循环，在首行、尾行、首列、尾列输出字符ch，其余位置输出空格。
//    for (i = 1; i <= m; i++) {	//行循环
//        for (j = 1; j <= n; j++)	//列循环（只含一个if结构，不需要加花括号）
//            if (i == 1 || i == m || j == 1 || j == n)
//                cout << ch; 	//或 putchar(ch);  或 cout.put(ch);
//            else
//                cout << ' ';	//或 putchar(' '); 或 cout.put(' ');
//        //上面的 if 结构也可用条件表达式简写为：
//        //cout << ((i == 1 || i == m || j == 1 || j == n)? ch: ' ');
//        cout << endl;	//或 putchar('\n'); 或 cout.put('\n');  //行尾输出换行符
//    }
//}


int main() {

    prtRect ('*', 4, 20);	//测试题目中给出的平常参数
    cout << endl;

    prtRect ('#', 2, 2);	//测试特殊参数：2行2列，中间无空格
    cout << endl;

    prtRect ('%', 1, 1);	//测试特殊参数：1行1列，总共仅1个字符
    cout << endl;

    prtRect ('%', -4, -20);	//测试特殊参数：m 和 n 为负数时能否正常处理？
    cout << endl;


    return 0;
}

