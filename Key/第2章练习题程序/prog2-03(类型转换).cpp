/*********************************************************************
程序名：表达式求值中的类型转换
版权：遵从GPL版权协议，可自由使用和传播（请勿上传到收费性网络文库）
作者：anbangli@foxmail.com
日期：2019-08-09
说明：

prog2-3.分析在下面表达式的计算过程中，在什么地方将发生什么类型转换？
编写程序计算各个表达式的值。
（1） 3 * (2L + 4.5) - 44
（2） 10 / 25 + 10.0 / 25 + 10 /25. + .1 / 2
（3） 5 / 3 * 4.2 + 'A' + 4.0/5
（4） 'A'/10. + 10/'a'

解答：
（1） 3 * (2L + 4.5) - 44 求值过程中发生了三次转换：
1、计算 2L + 4.5 时，long 类型的 2L 转变为 double 类型，再与同类型的 4.5 计算，得到 6.5；
2、接下来计算 3 * (6.5) 时，int 类型的 3 转换为 double 类型再参与计算，得到 19.5；
3、int 类型的 44 转换为 double 类型，计算 19.5 - 44.0。结果为 double 类型的 -24.5。

（2） 10 / 25 + 10.0 / 25 + 10 /25. + .1 / 2
1、10/25 为整数整除，结果为 int 类型的值 0；
2、计算 10.0/25 时，25 转换为double 类型，10.0/25.0 = 0.4
3、计算 10/25. 时，10 转换为 double 类型， 10.0/25.0 = 0.4
4、计算 .1/2 时，2 转换为 double 类型，.1/2.0 = 0.05
5、计算  0 + 0.4 + 0.4 + 0.05 时，int 类型的 0 转换为 double 类型的 0.0，计算结果为 0.85

（3） 5 / 3 * 4.2 + 'A' + 4.0/5
1、5/3 为整数整除。5/3 = 1
2、计算 1* 4.2 时，int 类型的 1 转换为 double 类型的 1.0。1.0*4.2 = 4.2
3、计算 4.0/5 时，int 类型的 5 转换为 double 类型的 5.0。4.0/5.0 = 0.8
4、字符参与算术运算时，当作整数看待，其值为相应的 ASCII 值。所以字符 'A' 被视为整数值 65，
转换为double 类型 65.0 参与运算。4.2 + 65.0 + 0.8 = 70.0 （以默认方式输出为 70）

（4） 'A'/10. + 10/'a'
记住：字符参与算术运算时，当作整数看待，其值为相应的 ASCII 值。
1、字符 'A' 被视为整数值 65。计算 'A'/10. 时，'A'转换为 double 类型的 65.0。 65.0/10. = 6.5
2、计算 10/'a' 时，字符 'a' 被转换为 int 类型的值 97。10/'a' = 10/97 = 0
3、计算 6.5 + 0 时，int 类型的 0 转换为 double 类型的 0.0。 6.5 + 0.0 = 6.5


*********************************************************************/

#include <iostream>
#include <cmath>
using namespace std;

int main() {
	cout << "（1） " << 3 * (2L + 4.5) - 44 << endl;		//-24.5
	cout << "（2） " << 10 / 25 + 10.0 / 25 + 10 / 25. + .1 / 2 << endl;	//16.3971
	cout << "（3） " << 5 / 3 * 4.2 + 'A' + 4.0 / 5 << endl;	//1364.98
	cout << "（4） " << 'A' / 10. + 10 / 'a' << endl;

	return 0;
}






