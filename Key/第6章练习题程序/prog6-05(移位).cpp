/*********************************************************************
程序名：数组元素移位
版权：遵从GPL版权协议，可自由使用和传播（请勿上传到收费性网络文库）
作者：anbangli@foxmail.com
日期：2019-07-10 17:33
说明：
6-5.设长度为LEN的整型数组里存满了整数，请写程序做这些数的循环移位，也就是说，
每次操作将数组中各个整数依次后移1个位置，最后一个数移到数组首元素，并输出这些数。
重复执行这个操作m次。要求操作中只用一个整型变量（不允许使用其它数组）作为辅助性的
元素临时存储空间。
*********************************************************************/
#include <iostream>
#include <cstdlib>
#include <ctime>
//#include <windows.h>

using namespace std;

int main() {
	int array[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20};	//定义一个数组并初始化为示例数据
	int n = sizeof(array) / sizeof(array[0]);	//求得数组大小

	int m = 400;	//共移动 m 次
	int i, j, temp;

	cout << "数组元素右移\n\n";
	cout << "每次右移 1 位，执行 " << m << " 次\n\n";

	for (i = 1; i <= m; i++) {
		temp = array[n - 1];	//暂存数组最末元素到 temp
		for (j = n - 1; j > 0; j--)	//依次移动元素
			array[j] = array[j - 1];
		array[j] = temp;	//此时 j 的值为 0。//把 temp 复制到数组首元素

		for (j = 0; j < n; j++)	//打印输出
			cout << array[j] << " " ; //<< (j == n - 1 ? "\n" : " ");
		cout << "\n";

		//稍作改进可以做成趣味流水灯：末尾不要输出"\n"而是输出"\r"以返回到头部，并休眠。
		//cout << "\r";
		//Sleep(200);	//休眠 200ms 。（使用Sleep函数必须要包含头文件 windows.h）
	}

	return 0;
}
