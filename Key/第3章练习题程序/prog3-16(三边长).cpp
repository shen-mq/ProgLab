/*********************************************************************
程序名：1 ~ 100 范围里可以组成直角三角形三个边的整数组
版权：遵从GPL版权协议，可自由使用和传播（请勿上传到收费性网络文库）
作者：anbangli@foxmail.com
日期：2019-08-09
说明：
prog3-16.能够组成直角三角形三个边的最小一组整数是3、4、5。写程序求出在
1 ~ 100 范围里所有可以组成直角三角形三个边的整数组，输出三个一组的整数。
设法避免重复的组。
解题思路：这是一个三重循环
*********************************************************************/
#include <iostream>
#include <cmath>
#include <iomanip>
using namespace std;

int main() {
    int a, b, c, mx = 100;
    int num;	//计数共有多少组（题目中并无要求，只是为了检测各种解法的结果是否一致）

    //解法一：a、b 和 c 都执行 1~ 100 的循环。检测是否满足勾股定理 a^2 + b^2 = c^2
    //由于斜边 c 必然会大于 a 和 b，所以重复组只可能是 a 与 b 互换。
    //因此要求满足 a <= b 才输出，即可排除重复组。
    num = 0;
    for (a = 1; a <= mx; a++)
        for (b = 1; b <= mx; b++)
            for (c = 1; c <= mx; c++)
                if ((a * a + b * b == c * c) && (a <= b) ) {
                    cout << "a, b, c: " << a << "\t" << b << "\t" << c << "\n";
                    num ++;
                }
    cout << "共有 " << num << " 组\n\n";

    //解法二：对解法一进行优化，让 a 的循环起始值从 3 开始，b 从 a 开始，
    //这时自然地已经满足了 a <= b，从而排除了重复组。
    //还让 c 的循环起始值从 b+1 开始（当然也可以从 sqrt(a*a + b*b) 开始），
    //每找到一组值，就用 break 跳出 c 的循环。
    num = 0;
    for (a = 3; a <= mx; a++)
        for (b = a; b <= mx; b++)
            for (c = b + 1; c <= mx; c++)
                if (a * a + b * b == c * c)  {
                    cout << a << " " << b << " " << c 	//简洁紧凑输出
                         << ((++num) % 6 != 0 ? "   " : "\n");	//每 6 组换行
                    break;
                }
    cout << "\n共有 " << num << " 组\n\n";

    return 0;
}

