/*********************************************************************
程序名：蒙特卡罗模拟
版权：遵从GPL版权协议，可自由使用和传播（请勿上传到收费性网络文库）
作者：anbangli@foxmail.com
日期：2019-07-20
说明：
4-10.每次随机生成两个介于0和1之间的实数（可以利用标准库随机数生成函数），
检测这两个值形成的点是否在单位圆内（与坐标原点的距离是否小于1）。生成
一系列这样随机点，统计单位圆内的点数与总点数，看它们之比的4倍是否趋向
 π值。取总点数为 100、500、1000、5000、10000 和 50000 做试验（这种数
 据模拟方法称为 “蒙特卡罗模拟”）。
 （提示：把循环变量从1到500000取值，在循环体中当循环变量的值为所需的点数
 时输出信息。）
*********************************************************************/

#include <iostream>
#include <cmath>	//数学函数
#include <ctime>	//计时函数
#include <cstdlib>	//随机数函数
#include <iomanip>	//输出格式控制
using namespace std;

int main() {
    int n, k;

    double x, y;
    cout << "使用从 0 到 1 的实数随机数进行蒙特卡罗模拟：" << endl;

    srand(time(0));
    for (n = 1, k = 0; n <= 100000; n++) {
        x = double(rand()) / RAND_MAX ;
        y = double(rand()) / RAND_MAX ;

        if ((x * x + y * y) <= 1 )
            k++;
        if (n == 100 || n == 500 || n == 1000 || n == 5000 || n % 10000 == 0)
            cout << fixed << "n = " << n << "\t pai = " << 4.0 * k / n << endl;
    }
    return 0;
}



